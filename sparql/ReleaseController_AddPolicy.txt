PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
PREFIX osph: <https://w3id.org/ontoeng/osph#>
PREFIX cs: <https://w3id.org/ontoeng/controlSystem#>
PREFIX fsm: <http://www.learninglab.de/~dolog/fsm/fsm.owl#>
PREFIX ifcext: <https://w3id.org/ontoeng/IFC4_ADD1_extension#>
PREFIX factory: <https://w3id.org/ontoeng/factory#>

INSERT { 
	GRAPH ?graph { 
		?condTrIdleRel osph:hasConditionExpression ?condexpr .
	}
}

WHERE {

	?controller osph:hasStateMachine ?stM .
	?stM fsm:contains ?region .
	?region fsm:hasStateMachineElement ?idleSt .
	?region fsm:hasStateMachineElement ?relSt .		
	?idleSt rdf:type cs:RControllerIdleState .
	?relSt rdf:type cs:RControllerReleaseState .
	
	?trIdleRel fsm:Source ?idleSt .
	
	?relSt fsm:Entry ?entryAction .
	?entryAction osph:generatesEvent ?startOp .
	?eventType ifcext:typesObject|ifcext:declaresObject ?startOp .
	
	?trIdleRel fsm:TransitionGuard ?guardTrIdleRel .
	?guardTrIdleRel fsm:GuardCondition ?condTrIdleRel .

	#to be revised: add check for transition
	?machine osph:hasStateMachine/fsm:contains/fsm:hasStateMachineElement*/fsm:GuardEvent ?eventType .
	{?eventType rdf:type factory:MachineToolStartOperationType .}
	UNION {?eventType rdf:type factory:MachineToolStartOperation .}

	?policy cs:hasPolicyExpression ?condexpr .

}